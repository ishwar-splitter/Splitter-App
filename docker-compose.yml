version: '3.8'

services:
  frontend:
    build:
      context: ./splitter-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Expose frontend to local machine
    env_file:
      - ./splitter-app/.env
    depends_on:
      - backend
    networks:
      - splitter-network

  backend:
    build:
      context: ./splitter-api
      dockerfile: Dockerfile
    env_file:
      - ./splitter-api/.env
    depends_on:
      db:
        condition: service_healthy  # Wait for db to be healthy
    networks:
      - splitter-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./splitter-api/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - splitter-network

volumes:
  mysql_data:

networks:
  splitter-network:
    driver: bridge